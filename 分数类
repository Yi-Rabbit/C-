#include<iostream>
using namespace std;
class Fraction
{
protected:
	int a;//分子可以定义为保护成员
	int b;//分母应该定义为私有成员，因为要防止分母为0
	
public:
	void set(int aa,int bb);//设置分子分母
	void show();//显示分数
	Fraction add(Fraction u);//加一个分数
	int divisor(int p,int q);//求最大公约数
};

//设置分子、分母
void Fraction:: set(int aa,int bb) 
{
	a=aa;
	if (bb!=0) //分母有效性检验
	{
		b=bb;
	}
	else
	{ 
		a=0;
		b=1;
	}
}
//显示分数
void Fraction::show() 
{
	cout<<a<<"/"<<b;
}	

//求最大公因数
int Fraction::divisor(int p, int q) 
{
	int r;
	if(p<q)
	{
		int tmp;
		tmp=p;
		p=q;
		q=tmp;
	}
	r=p%q;
	while(r!=0)
	{
		p=q;
		q=r;
		r=p%q;
	}
	return q;
}

//分数相加，本类对象加u
Fraction Fraction::add(Fraction u)
{
	int tmp;
	Fraction v;
	v.a=a*u.b+b*u.a; //分子
	v.b=b*u.b;//分母
	tmp=divisor(v.a ,v.b);//计算分子、分母的公约数
	v.a=v.a/tmp;//约去公约数
	v.b=v.b/tmp;//约去公约数
	return v; //返回结果
}

class Real:public Fraction
{
	public:
	void show_real()
	{
		cout<<a<<'/'<<b<<'='<<a/(double)b<<endl;
	}
};

int main()
{
	Real f1,f2,f3;//声明类的三个对象
	int a,b,c,d;//两个分数的分子和分母
	cout<<"\n请分别输入两个分数的分子和分母，分母为零时退出\n"; 
	cin>>a>>b;
	cin>>c>>d;
	f1.set(a,b);
	f2.set(c,d);
	f1.show_real();
	f2.show_real();
	return 0;
}
